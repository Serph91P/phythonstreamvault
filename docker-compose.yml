services:
  nginx:
    container_name: streamvault_nginx
    image: nginx:latest
    ports:
      - "8081:80"
    volumes:
      - ./nginx.conf.template:/etc/nginx/templates/nginx.conf.template
    environment:
      - BASE_URL=
    entrypoint: /bin/sh -c "envsubst '\$${BASE_URL}' < /etc/nginx/templates/nginx.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - web
    networks:
      - streamvault-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: streamvault
    volumes:
      - .:/usr/src/app
      - recordings:/recordings
    ports:
      - "8000"
    environment:
      - BASE_URL=
      - TWITCH_CLIENT_ID=
      - TWITCH_CLIENT_SECRET=
      - TWITCH_WEBHOOK_SECRET=
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - streamvault-network

  rabbitmq:
    container_name: streamvault_rabbit
    image: rabbitmq:3-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels "[{connection,error}]"
      - RABBITMQ_ENABLED_PLUGINS_FILE=/etc/rabbitmq/enabled_plugins
    ports:
      - "5672:5672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./enabled_plugins:/etc/rabbitmq/enabled_plugins
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - streamvault-network

  redis:
    container_name: streamvault_redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - streamvault-network

volumes:
  rabbitmq_data:
  recordings:

networks:
  streamvault-network:
    driver: bridge